--  VES Collector
--  Virtual Event Streaming (VES) Collector is RESTful collector for processing JSON messages. The collector verifies the source and validates the events against VES schema before distributing to DMAAP MR topics 
--
--  The version of the OpenAPI document: 1.4.5
--  
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.0.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

with Swagger.Streams;
package body Ves.Clients is

   --  errorHtml
   procedure Error_Html_Using_DELETE
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.DELETE, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_DELETE;

   --  errorHtml
   procedure Error_Html_Using_GET
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_GET;

   --  errorHtml
   procedure Error_Html_Using_HEAD
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.HEAD, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_HEAD;

   --  errorHtml
   procedure Error_Html_Using_OPTIONS
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.OPTIONS, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_OPTIONS;

   --  errorHtml
   procedure Error_Html_Using_PATCH
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.PATCH, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_PATCH;

   --  errorHtml
   procedure Error_Html_Using_POST
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.POST, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_POST;

   --  errorHtml
   procedure Error_Html_Using_PUT
      (Client : in out Client_Type;
       Result : out Ves.Models.ModelAndView_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/error");
      Client.Call (Swagger.Clients.PUT, URI, Reply);
      Ves.Models.Deserialize (Reply, "", Result);
   end Error_Html_Using_PUT;

   --  mainPage
   procedure Main_Page_Using_GET
      (Client : in out Client_Type;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Main_Page_Using_GET;

   --  receiveEvent
   procedure Receive_Event_Using_POST
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
       URI   : Swagger.Clients.URI_Type;
       Req   : Swagger.Clients.Request_Type;
       Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("event", Json_Payload);

      URI.Set_Path ("/eventListener/v1");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
      --   Ves.Models.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST;

   --  receiveEvent
   procedure Receive_Event_Using_POST1
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v1/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST1;

   --  receiveEvent
   procedure Receive_Event_Using_POST10
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v7");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST10;

   --  receiveEvent
   procedure Receive_Event_Using_POST11
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v7/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST11;

   --  receiveEvent
   procedure Receive_Event_Using_POST2
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v2");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST2;

   --  receiveEvent
   procedure Receive_Event_Using_POST3
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v2/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST3;

   --  receiveEvent
   procedure Receive_Event_Using_POST4
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v3");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST4;

   --  receiveEvent
   procedure Receive_Event_Using_POST5
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v3/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST5;

   --  receiveEvent
   procedure Receive_Event_Using_POST6
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v4");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST6;

   --  receiveEvent
   procedure Receive_Event_Using_POST7
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v4/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST7;

   --  receiveEvent
   procedure Receive_Event_Using_POST8
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v5");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST8;

   --  receiveEvent
   procedure Receive_Event_Using_POST9
      (Client : in out Client_Type;
       Json_Payload : in Swagger.UString;
       Result : out Swagger.UString) is
      URI   : Swagger.Clients.URI_Type;
      Req   : Swagger.Clients.Request_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      Req.Stream.Write_Entity ("jsonPayload", Json_Payload);

      URI.Set_Path ("/eventListener/v5/eventBatch");
      Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      Swagger.Streams.Deserialize (Reply, "", Result);
   end Receive_Event_Using_POST9;

   --   procedure Update_Todo
      --   (Client : in out Client_Type;
       --   Title : in Swagger.UString;
       --   Status : in Swagger.UString;
       --   View_Name : in Swagger.UString;
       --   Result : out Ves.Models.ModelAndView_Type) is
      ---   URI   : Swagger.Clients.URI_Type;
      --   Req   : Swagger.Clients.Request_Type;
      --   Reply : Swagger.Value_Type;
   --   begin
      --   Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));
      --   Client.Initialize (Req, (1 => Swagger.Clients.APPLICATION_JSON));
      --   Req.Stream.Write_Entity ("title", Title);
      --   Req.Stream.Write_Entity ("status", Status);
      --   Req.Stream.Write_Entity ("viewname", View_Name);

      --   URI.Set_Path ("/eventListener/v1");
      --   Client.Call (Swagger.Clients.POST, URI, Req, Reply);
      --   Ves.Models.Deserialize (Reply, "", Result);
   --   end Update_Todo;

end Ves.Clients;
