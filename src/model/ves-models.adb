--  VES Collector
--  Virtual Event Streaming (VES) Collector is RESTful collector for processing JSON messages. The collector verifies the source and validates the events against VES schema before distributing to DMAAP MR topics 
--
--  The version of the OpenAPI document: 1.4.5
--  
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.0.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.


package body Ves.Models is

   use Swagger.Streams;



   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in View_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("contentType", Value.Content_Type);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in View_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out View_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "contentType", Value.Content_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out View_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : View_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ModelAndView_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("title", Value.Title);
      Into.Write_Entity ("empty", Value.Empty);
      Into.Write_Entity ("model", Value.Model);
      Into.Write_Entity ("reference", Value.Reference);
      Into.Write_Entity ("status", Value.Status);
      Serialize (Into, "view", Value.View);
      Into.Write_Entity ("viewName", Value.View_Name);
      Into.Write_Entity ("status", Value.Status);
      --   Into.Write_Long_Entity ("id", Value.Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ModelAndView_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ModelAndView_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "empty", Value.Empty);
      Deserialize (Object, "model", Value.Model);
      Swagger.Streams.Deserialize (Object, "reference", Value.Reference);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
      Deserialize (Object, "view", Value.View);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "viewName", Value.View_Name);
      Swagger.Streams.Deserialize (Object, "status", Value.Status);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ModelAndView_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ModelAndView_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;



end Ves.Models;
